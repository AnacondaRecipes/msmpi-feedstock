# -----------------------------------------------------------------------------
#  *** Important ****
# This package currently needs to be built manually. There are build tools injected
# into the Visual Studio toolchain that have the potential to mess up builders.
# Once the appropriate versions of WDK, .NET core, and VC++ 2017 version 15.9 v14.16 Libs for Spectre (x86 and x64)
# have been added to the Windows builder image, this reccipe will need to be modified.
# 
# When Building This package:
# - Take care to create PRs with "CI skip" in the title.
#     - This will cause CI to not run on PR creation, new commits, OR on final merge
#     - See https://github.com/AnacondaRecipes/msmpi-feedstock/pull/1 for an example
# 
# Building on a dev instace:
# https://github.com/anaconda-distribution/perseverance-skills/blob/8c2c9dd826416c0f4695097528c8952373431bb6/sections/Package_building/More_debugging/Dev_machine_instances.md#initializing-an-ec2-instance
# 
# 1. Spin up a Windows dev instance per the instructions above. GUI instance may be helpful.
# 2. Right click "Anaconda Prompt (miniconda3)" in the start menu
# 3. Select more->Run as Administrator
# 4. `conda create -n build git m2-base conda-build conda-package-handling`
# 5. `conda activate build`
# 6. `cd C:\Users\dev-admin\Desktop`
# 7. `git clone https://github.com/AnacondaRecipes/aggregate.git`
# 8. `cd aggregate`
# 9. `git submodule update --init msmpi-feedstock`
# 10. `cd msmpi-feedstock && git checkout {{YOUR_BRANCH}} && cd ..`
# 11. `conda build msmpi-feedstock --croot ../croot`
# 12. Ensure build was successfull
# 13. `cd ..`
# 14. `cp ./croot/win-64/msmpi-*.tar.bz2 .`
# 15. cph transmute msmpi-*.tar.bz2 .conda
# ------------------------------------------------------------------------------

{% set name = "msmpi" %}
{% set version = "10.1.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/microsoft/Microsoft-MPI/archive/v{{ version }}.tar.gz
  sha256: 63c7da941fc4ffb05a0f97bd54a67968c71f63389a0d162d3182eabba1beab3d
  patches:
    - conda-build.patch

build:
  number: 0
  skip: true  # [not win]

requirements:
  build:
    - {{ compiler('cxx') }}
    - {{ compiler('c') }}
    - {{ compiler('m2w64_fortran') }}
    - perl
    - 7zip
    - m2-patch  # [win]
  run:
    - mpi 1.0 msmpi

test:
  files:
    - tests/*  # [win]
  requires:
    - {{ compiler('c') }}
    # These deps are needed for the mpi4py tests
    # - python
    # - pip
    # - cython
    # - setuptools
    # - git
  commands:
    # simple package integraty check
    - if not exist %LIBRARY_BIN%\\mpiexec.exe exit 1  # [win]
    - if not exist %LIBRARY_BIN%\\smpd.exe exit 1  # [win]
    - if not exist %LIBRARY_BIN%\\msmpi.dll exit 1  # [win]
    - if not exist %LIBRARY_INC%\\mpi.f90 exit 1  # [win]
    - if not exist %LIBRARY_INC%\\mpi.h exit 1  # [win]
    - if not exist %LIBRARY_LIB%\\msmpi.lib exit 1  # [win]
    - if not exist %LIBRARY_LIB%\\mpifort.lib exit 1  # [win]
    - if not %MSMPI_BIN% == %LIBRARY_BIN% exit 1  # [win]
    - if not %MSMPI_INC% == %LIBRARY_INC% exit 1  # [win]
    - if not %MSMPI_LIB64% == %LIBRARY_LIB% exit 1  # [win]

    # check if binaries work ok
    - where mpiexec.exe
    - where smpd.exe
    
    - mpiexec.exe /help2
    - mpiexec.exe /help3

    # This works! Just comment out to save time...
    ## test compiling + linking + execution
    #- git clone https://github.com/mpi4py/mpi4py.git
    #- cd mpi4py
    #- pip install --no-build-isolation --no-deps -v .
    #- cd ..
    #- python -c "from mpi4py import MPI; print(MPI.Get_library_version())"
    #- mpiexec -n 2 python -m mpi4py.bench helloworld
    #- mpiexec -n 2 python -m mpi4py.bench ringtest

    # check if MSMPI_VER is correctly patched
    - cl.exe -I%LIBRARY_INC% tests\\get_mpi_ver.c /Fe"%cd%\get_mpi_ver.exe"
    - for /f "tokens=* usebackq" %%f in (`get_mpi_ver`) do (set "mpi_ver=%%f")
    # TODO(leofang): we could compute this, yes, but don't bother as MS-MPI is not evolving...
    - if not %mpi_ver% == 2561 exit 1  # [win]  # for MS-MPI v10.1.x

    # check compiling & running simple C code
    # TODO(leofang): add C++ & Fortran tests?
    - cl.exe -I%LIBRARY_INC% tests\\helloworld.c /Fe"%cd%\helloworld.exe" /link /LIBPATH:"%LIBRARY_LIB%" msmpi.lib
    - mpiexec.exe -n 4 helloworld.exe

about:
  home: https://docs.microsoft.com/en-us/message-passing-interface/microsoft-mpi
  license: MIT
  license_file: LICENSE.txt
  license_family: MIT
  summary: Microsoft message-passing-interface (MS-MPI)
  description: |
    Microsoft MPI (MS-MPI) is a Microsoft implementation of the Message Passing
    Interface standard for developing and running parallel applications on the
    Windows platform.
  doc_url: https://docs.microsoft.com/en-us/message-passing-interface/microsoft-mpi
  dev_url: https://github.com/microsoft/Microsoft-MPI

extra:
  recipe-maintainers:
    - RyanMcCarthy-NOAA
    - isuruf
